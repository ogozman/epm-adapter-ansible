
docker__edition: "ce"
docker__channel: "stable"
docker__version: "latest"

docker__install_docker_compose: true
docker__compose_version: "1.23.0"
docker__compose_download_url: "https://github.com/docker/compose/releases/download/{{ docker__compose_version }}/docker-compose-Linux-x86_64"

docker__users: ["ubuntu"]

docker__registries: []

docker__default_daemon_json_log_max_size: "1m"
docker__default_daemon_json_log_max_file: 10000

docker__default_daemon_json: |
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "{{ docker__default_daemon_json_log_max_size }}",
    "max-file": "{{ docker__default_daemon_json_log_max_file }}"
  }
docker__daemon_json: ""

docker__daemon_flags:
  - "-H unix://"

docker__daemon_environment: []

docker__systemd_override: ""

docker__cron_jobs:
  - name: "Docker disk clean up"
    job: docker system prune -af &> /dev/null
    schedule: ["0", "0", "*", "*", "0"]
    cron_file: "docker-disk-clean-up"
    user: "{{ (docker__users|first)|default('root') }}"

docker__package_dependencies:
  - "apt-transport-https"
  - "ca-certificates"
  - "cron"
  - "gnupg2"
  - "python-pip"
  - "software-properties-common"

docker__apt_key_id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
docker__apt_key_server: "https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg"  # yamllint disable-line rule:line-length
docker__apt_repository: >
  deb [arch=amd64]
  https://download.docker.com/linux/{{ ansible_distribution|lower }}
  {{ ansible_distribution_release }} {{ docker__channel }}

################# KEYSTONE #################

KEYSTONE_ENDPOINT: ""
KEYSTONE_PORT: ""
KEYSTONE_VERSION: ""
KEYSTONE_USERNAME: ""
KEYSTONE_PASSWORD: ""
KEYSTONE_DOMAIN: ""
KEYSTONE_ENABLED: "false"
